# Hugging Face Spaces Dockerfile for Crawl4AI
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    DEBIAN_FRONTEND=noninteractive \
    PLAYWRIGHT_BROWSERS_PATH=/home/user/.cache/ms-playwright

# Install system dependencies including ALL browser dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    wget \
    gnupg \
    git \
    ca-certificates \
    # Core system libraries
    libc6 \
    libstdc++6 \
    # Essential browser dependencies
    libglib2.0-0 \
    libnss3 \
    libnspr4 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm2 \
    libdbus-1-3 \
    libxcb1 \
    libxkbcommon0 \
    libx11-6 \
    libxcomposite1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxrandr2 \
    libgbm1 \
    libpango-1.0-0 \
    libcairo2 \
    libasound2 \
    libatspi2.0-0 \
    # GTK and X11 dependencies
    libgtk-3-0 \
    libxss1 \
    libgconf-2-4 \
    xvfb \
    # Font dependencies
    fonts-liberation \
    fonts-dejavu-core \
    fontconfig \
    # Additional Chromium dependencies
    libappindicator3-1 \
    libappindicator1 \
    libxi6 \
    libxrender1 \
    libxtst6 \
    libxcursor1 \
    libxdamage1 \
    libxfixes3 \
    libxinerama1 \
    libxrandr2 \
    libxss1 \
    libxtst6 \
    # Audio dependencies
    libasound2 \
    libpulse0 \
    # Additional system libraries that Chromium might need
    libgcc-s1 \
    libgssapi-krb5-2 \
    libkrb5-3 \
    libk5crypto3 \
    libcom-err2 \
    libkrb5support0 \
    libkeyutils1 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create user (HF Spaces runs as user 1000)
RUN useradd -m -u 1000 user
USER user
ENV HOME=/home/user \
    PATH=/home/user/.local/bin:$PATH

# Set working directory
WORKDIR $HOME/app

# Copy requirements and install Python dependencies
COPY --chown=user requirements_hf.txt .
RUN pip install --user -r requirements_hf.txt

# Install Crawl4AI
RUN pip install --user crawl4ai[all]

# Setup Crawl4AI
RUN python -m crawl4ai.install

# Create playwright cache directory with proper permissions
RUN mkdir -p /home/user/.cache/ms-playwright

# Install Playwright browsers with comprehensive approach
RUN python3 -m playwright install-deps chromium || echo "System deps install failed"
RUN python3 -m playwright install chromium || echo "Browser install failed"

# Verify browser installation and debug
RUN echo "üîç Debugging browser installation..." && \
    ls -la /home/user/.cache/ms-playwright/ || echo "Cache directory not found" && \
    find /home/user/.cache/ms-playwright -name "*chrome*" -o -name "*chromium*" 2>/dev/null || echo "No browser executables found"

# Set proper permissions for playwright cache
RUN chmod -R 755 /home/user/.cache/ms-playwright 2>/dev/null || echo "Cache directory not found"

# Copy application files
COPY --chown=user app_hf_final.py app.py
COPY --chown=user startup_hf.py .
COPY --chown=user README_HF.md README.md

# Create a runtime browser installer script
RUN echo '#!/bin/bash\n\
echo "üîÑ Runtime browser check and installation..."\n\
echo "üìÅ Checking cache directory:"\n\
ls -la /home/user/.cache/ms-playwright/ 2>/dev/null || echo "Cache directory not found"\n\
echo "üîç Looking for browser executables:"\n\
find /home/user/.cache/ms-playwright -name "*chrome*" -o -name "*chromium*" 2>/dev/null || echo "No executables found"\n\
echo "üîÑ Installing browsers..."\n\
python3 -m playwright install chromium\n\
echo "‚úÖ Installation complete, verifying..."\n\
python3 -c "from playwright.sync_api import sync_playwright; p = sync_playwright().start(); browser = p.chromium.launch(headless=True); browser.close(); p.stop(); print(\"‚úÖ Browser verification successful\")" || echo "‚ùå Browser verification failed"\n\
' > /home/user/install_browsers.sh && chmod +x /home/user/install_browsers.sh

# Try browser verification (but don't fail build)
RUN python3 -c "from playwright.sync_api import sync_playwright; p = sync_playwright().start(); browser = p.chromium.launch(headless=True); browser.close(); p.stop(); print('‚úÖ Build-time browser test successful')" || echo "‚ö†Ô∏è Build-time browser test failed, will install at runtime"

# Expose port
EXPOSE 7860

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:7860/ || exit 1

# Run browser installation, startup script, then the application
CMD ["sh", "-c", "/home/user/install_browsers.sh && python startup_hf.py && python app.py"]